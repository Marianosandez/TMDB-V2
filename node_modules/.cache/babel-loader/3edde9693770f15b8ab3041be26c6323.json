{"ast":null,"code":"var _jsxFileName = \"/Users/marianosandez/Desktop/Plataforma5/TMDB v2/src/CardGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from './Card';\nimport { SimpleGrid, Box, Spinner } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CardGrid = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }, [data]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    py: ['1rem', '50px'],\n    mx: ['0.5rem', '50px'],\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [3, 3, 5],\n      spacing: \"1rem\",\n      children: data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardGrid, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = CardGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","useState","useEffect","Card","SimpleGrid","Box","Spinner","CardGrid","data","isLoading","setIsLoading","setTimeout","map","item"],"sources":["/Users/marianosandez/Desktop/Plataforma5/TMDB v2/src/CardGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card } from './Card';\nimport { SimpleGrid, Box, Spinner } from '@chakra-ui/react';\n\nexport const CardGrid = ({data}) => {\nconst [isLoading, setIsLoading]=useState(true)\nuseEffect(() => {\n  setTimeout(()=>{setIsLoading(false)},1000)\n\n  \n}, [data])\n\n  return (\n    isLoading?\n    <Spinner/>:\n    <Box py={['1rem','50px']}  mx={['0.5rem','50px']}>\n        <SimpleGrid columns={[3, 3, 5]} spacing='1rem'>\n                {data.map((item)=><Card item={item}/>)} \n        </SimpleGrid>\n        </Box>\n   \n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,QAAyC,kBAAzC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACpC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;EACAC,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,MAAI;MAACD,YAAY,CAAC,KAAD,CAAZ;IAAoB,CAA1B,EAA2B,IAA3B,CAAV;EAGD,CAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;EAME,OACEC,SAAS,gBACT,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QADS,gBAET,QAAC,GAAD;IAAK,EAAE,EAAE,CAAC,MAAD,EAAQ,MAAR,CAAT;IAA2B,EAAE,EAAE,CAAC,QAAD,EAAU,MAAV,CAA/B;IAAA,uBACI,QAAC,UAAD;MAAY,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;MAAgC,OAAO,EAAC,MAAxC;MAAA,UACSD,IAAI,CAACI,GAAL,CAAUC,IAAD,iBAAQ,QAAC,IAAD;QAAM,IAAI,EAAEA;MAAZ;QAAA;QAAA;QAAA;MAAA,QAAjB;IADT;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QAHF;AAUD,CAlBM;;GAAMN,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}