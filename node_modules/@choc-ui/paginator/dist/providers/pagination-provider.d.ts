import { As, BoxProps } from '@chakra-ui/react';
import React, { Dispatch, ReactElement, SetStateAction } from 'react';
export declare const defaultData: {
    current: null;
    defaultCurrent: number;
    defaultPage: number;
    defaultPageSize: number;
    disabled: boolean;
    hideOnSinglePage: boolean;
    itemRender: () => null;
    pageSize: number;
    pageNeighbours: number;
    pageSizeOptions: number[];
    paginationProps: null;
    responsive: boolean;
    showQuickJumper: boolean;
    showSizeChanger: null;
    showTotal: () => null;
    simple: null;
    total: number;
    onChange: () => string;
    onShowSizeChange: () => string;
    size: string;
    rounded: string;
    baseStyles: null;
    activeStyles: null;
    hoverStyles: null;
    colorScheme: string;
    focusRing: boolean;
    basePath: null;
};
export declare type DefaultData = typeof defaultData;
export declare type Responsives = 'activePage' | 'totalRender' | 'fastBackward' | 'fastForward' | 'pageSize' | 'pageJumper';
export interface Pagination {
    current: number | null;
    defaultCurrent: number;
    defaultPage: number;
    defaultPageSize: number;
    disabled: boolean;
    hideOnSinglePage: boolean;
    itemRender: (currentPage?: Pagination['currentPage'], type?: string) => As<any> | any;
    pageSize: number;
    pageNeighbours: number;
    pageSizeOptions: number[];
    paginationProps: BoxProps | null;
    responsive: Partial<Record<Responsives, boolean>> | boolean;
    showQuickJumper: boolean;
    showSizeChanger: boolean | null;
    showTotal: (total?: number) => ReactElement | any;
    simple: boolean | null;
    total: number;
    onChange: (currentPage?: Pagination['currentPage'], totalPages?: number, pageSize?: Pagination['pageSize'], total?: number) => void;
    onShowSizeChange: (currentPage?: Pagination['currentPage'], size?: number) => void;
    size: string;
    rounded: string;
    colorScheme: string;
    baseStyles: BoxProps | null;
    activeStyles: BoxProps | null;
    hoverStyles: BoxProps | null;
    currentPage: number;
    setCurrentPage: Dispatch<SetStateAction<Pagination['currentPage']>>;
    setPageSize: Dispatch<SetStateAction<Pagination['pageSize']>>;
    focusRing: boolean | string;
    basePath: string | null;
}
declare const PaginationContext: React.Context<Pagination>;
export default PaginationContext;
